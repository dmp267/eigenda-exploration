{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d13413972a108d5d9290cb82429c5c35f43ce4f27550652dbe86aad0c1a062564736f6c63430008190033","sourceMap":"25252:6377:72:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;25252:6377:72;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d13413972a108d5d9290cb82429c5c35f43ce4f27550652dbe86aad0c1a062564736f6c63430008190033","sourceMap":"25252:6377:72:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/CarbonMonitoringVerifier_flat.sol\":\"Merkle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/eigenlayer-contracts/lib/ds-test/src/\",\":eigenda/=lib/eigenda/contracts/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/contracts/CarbonMonitoringVerifier_flat.sol\":{\"keccak256\":\"0x72ce44d756ce401111b882cddd814c55fbdf4c795bd6c700fa8b998a2d8269be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://804c283836cdeca0640eb0b2f11a2180d2a4abda78f1239355fb800190214404\",\"dweb:/ipfs/QmSMajejLgVwGJLBRzXJYS7VHCvf7JPYkk52rq7oPC42rP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/eigenlayer-contracts/lib/ds-test/src/","eigenda/=lib/eigenda/contracts/","eigenlayer-contracts/=lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/contracts/CarbonMonitoringVerifier_flat.sol":"Merkle"},"evmVersion":"paris","libraries":{}},"sources":{"src/contracts/CarbonMonitoringVerifier_flat.sol":{"keccak256":"0x72ce44d756ce401111b882cddd814c55fbdf4c795bd6c700fa8b998a2d8269be","urls":["bzz-raw://804c283836cdeca0640eb0b2f11a2180d2a4abda78f1239355fb800190214404","dweb:/ipfs/QmSMajejLgVwGJLBRzXJYS7VHCvf7JPYkk52rq7oPC42rP"],"license":"MIT"}},"version":1},"id":72}